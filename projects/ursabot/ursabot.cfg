# -*- python -*-
# ex: set filetype=python:

# Copyright 2019 RStudio, Inc.
# All rights reserved.
#
# Use of this source code is governed by a BSD 2-Clause
# license that can be found in the LICENSE_BSD file.

from pathlib import Path

from ursabot.docker import DockerImage, ADD, RUN, pip, worker_image_for
from ursabot.workers import DockerLatentWorker
from buildbot.plugins import util

from ursabot.configs import ProjectConfig, MasterConfig
from ursabot.reporters import GitHubStatusPush
from ursabot.schedulers import AnyBranchScheduler, ForceScheduler
from ursabot.builders import DockerBuilder
from ursabot.changes import ChangeFilter
from ursabot.steps import ShellCommand, PyTest, Pip, GitHub


name = 'ursa-labs/ursabot'
repo = 'https://github.com/ursa-labs/ursabot'


docker_assets = Path(__file__).parent.parent / 'docker'
ursabot_image = DockerImage(
    name='ursabot',
    base='python:3.7',
    arch='amd64',
    os='debian-9',
    org='ursalab',
    title='Ursabot Python 3.7',
    steps=[
        ADD(docker_assets / 'requirements-ursabot.txt'),
        RUN(pip(files=['requirements-ursabot.txt']))
    ]
)
worker_image = worker_image_for(ursabot_image)


class UrsabotTest(DockerBuilder):
    tags = ['ursabot']
    steps = [
        GitHub(
            name='Clone Ursabot',
            repourl=util.Property('repository'),
            mode='full'
        ),
        Pip(['install', '-e', '.']),
        PyTest(args=['-m', 'not docker', 'ursabot']),
        ShellCommand(
            command=['flake8', 'ursabot'],
            name='Flake8'
        ),
        ShellCommand(
            command=['buildbot', 'checkconfig', '.'],
            env={'URSABOT_ENV': 'test'},
            name='Checkconfig'
        )
    ]
    images = [worker_image]


workers = [
    DockerLatentWorker(
        'local-docker',
        password=None,
        arch='amd64',
        max_builds=1,
        properties={'ncpus': 2},
        image=util.Property('docker_image'),
        docker_host='unix://var/run/docker.sock',
        masterFQDN='host.docker.internal',
        autopull=True,
        alwaysPull=True,
        volumes=util.Property('docker_volumes', []),
        hostconfig=util.Property('docker_hostconfig', default={}),
        missing_timeout=120,
    )
]

builders = UrsabotTest.builders_for(workers)

schedulers = [
    AnyBranchScheduler(
        name='Ursabot',
        change_filter=ChangeFilter(
            project=name,
        ),
        treeStableTimer=None,
        builders=builders
    ),
    ForceScheduler(
        name='UrsabotForce',
        project=name,
        repository=repo,
        builders=builders
    )
]

reporters = [
    GitHubStatusPush(
        name='UrsabotStatusPush',
        tokens=[
            util.Interpolate('%(secret:ursabot/github_token)s')
        ],
        context=util.Interpolate('%(prop:buildername)s'),
        builders=builders,
        debug=False,
        verbose=True,
        verify=True
    )
]

testing = ProjectConfig(
    workers=workers,
    builders=builders,
    schedulers=schedulers
)
production = ProjectConfig(
    workers=workers,
    builders=builders,
    schedulers=schedulers,
    reporters=reporters
)

BuildmasterConfig = MasterConfig(
    title='Ursabot Testing',
    url='http://localhost:4100/',
    webui_port=4100,
    worker_port=9989,
    database_url='sqlite:///ursabot.sqlite',
    projects=[testing]
)
